/// <reference lib="WebWorker" />

import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { NetworkFirst, StaleWhileRevalidate } from 'workbox-strategies';

declare const self: ServiceWorkerGlobalScope;

self.addEventListener('install', (event) => {
    self.skipWaiting();
});

self.addEventListener('activate', (event) => {
    event.waitUntil(self.clients.claim());
});

// Precache assets generated by your build process
precacheAndRoute(self.__WB_MANIFEST);

// Network First Strategy for homepage data
registerRoute(
    ({ url }) => url.origin === 'http://localhost:5000' && url.pathname.startsWith('/homePageData/'),
    new NetworkFirst({
        cacheName: 'home-page-data',
        networkTimeoutSeconds: 3,
    })
);

// Stale While Revalidate Strategy for community forum posts
registerRoute(
    ({ url }) => url.origin === 'http://localhost:5000' && url.pathname.startsWith('/comunity-fourm/posts/'),
    new StaleWhileRevalidate({
        cacheName: 'community-forum-posts',
    })
);

// Network First Strategy for user details
registerRoute(
    ({ url }) => url.origin === 'http://localhost:5000' && url.pathname.startsWith('/user-details/'),
    new NetworkFirst({
        cacheName: 'user-details',
    })
);

// Stale While Revalidate Strategy for feedback
registerRoute(
    ({ url }) => url.origin === 'http://localhost:5000' && url.pathname.startsWith('/feedback/'),
    new StaleWhileRevalidate({
        cacheName: 'feedback',
    })
);

// Cache First Strategy for favorites
registerRoute(
    ({ url }) => url.origin === 'http://localhost:5000' && url.pathname.startsWith('/favorites/'),
    new NetworkFirst({
        cacheName: 'favorites',
    })
);

// Default strategy for other requests
registerRoute(
    ({ request }) => request.destination !== 'document',
    new NetworkFirst()
);
